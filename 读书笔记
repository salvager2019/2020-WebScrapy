•?匹配零次或一次前面的分组。
•*匹配零次或多次前面的分组。
•+匹配一次或多次前面的分组。
•{n}匹配n 次前面的分组。
•{n,}匹配n 次或更多前面的分组。
•{,m}匹配零次到m 次前面的分组。
•{n,m}匹配至少n 次、至多m 次前面的分组。
•{n,m}?或*?或+?对前面的分组进行非贪心匹配。
•^spam 意味着字符串必须以spam 开始。
•spam$意味着字符串必须以spam 结束。
•.匹配所有字符，换行符除外。
•\d、\w 和\s 分别匹配数字、单词和空格。
•\D、\W 和\S 分别匹配出数字、单词和空格外的所有字符。
•[abc]匹配方括号内的任意字符（诸如a、b 或c）。
•[^abc]匹配不在方括号内的任意字符。
• re.IGNORECASE 忽略大小写
• re.DOTALL 让句点字符匹配所有字符，包括换行字符
• re.VERBOSE 允许空白字符和注释

soup.select('div') 所有名为<div>的元素
soup.select('#author') 带有id 属性为author 的元素
soup.select('.notice') 所有使用CSS class 属性名为notice 的元素
soup.select('div span') 所有在<div>元素之内的<span>元素
soup.select('div > span') 所有直接在<div>元素之内的<span>元素，中间没有其他元素
soup.select('input[name]') 所有名为<input>，并有一个name 属性，其值无所谓的元素
soup.select('input[type="button"]') 所有名为<input>，并有一个type 属性，其值为button 的元素
表 11-3 selenium 的WebDriver 方法，用于寻找元素
方法名 返回的WebElement 对象/列表
browser.find_element_by_class_name(name)
browser.find_elements_by_class_name(name)
使用CSS 类name 的元素
browser.find_element_by_css_selector(selector)
browser.find_elements_by_css_selector(selector)
匹配CSS selector 的元素
browser.find_element_by_id(id)
browser.find_elements_by_id(id)
匹配id 属性值的元素
browser.find_element_by_link_text(text)
browser.find_elements_by_link_text(text)
完全匹配提供的text 的<a>元素
browser.find_element_by_partial_link_text(text)
browser.find_elements_by_partial_link_text(text)
包含提供的text 的<a>元素
browser.find_element_by_name(name)
browser.find_elements_by_name(name)
匹配name 属性值的元素
browser.find_element_by_tag_name(name)
browser.find_elements_by_tag_name(name)
匹配标签name 的元素
(大小写无关，<a>元素匹配'a'和'A')表 11-4 WebElement 的属性和方法
属性或方法描述
tag_name 标签名，例如'a'表示<a>元素
get_attribute(name) 该元素 name 属性的值
text 该元素内的文本，例如<span>hello</span>中的'hello'
clear() 对于文本字段或文本区域元素，清除其中输入的文本
is_displayed() 如果该元素可见，返回True，否则返回False
is_enabled() 对于输入元素，如果该元素启用，返回True，否则返回False
is_selected() 对于复选框或单选框元素，如果该元素被选中，选择True，否则返回False
location 一个字典，包含键'x'和'y'，表示该元素在页面上的位置
